{"version":3,"sources":["../src/defaults.ts","../src/plugin.ts"],"names":[],"mappings":"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","sourcesContent":["import defaultTailwindColors from 'tailwindcss/colors';\n\nconst defaultColors = {\n\t// frame: defaultTailwindColors.neutral,\n\n\t'frame': {\n\t\t50: '#F9FAFB',\n\t\t100: '#EEF0F2',\n\t\t200: '#D7DBE0',\n\t\t300: '#C0C7CE',\n\t\t400: '#95A1AC',\n\t\t500: '#677584',\n\t\t600: '#434D56',\n\t\t700: '#2F363C',\n\t\t800: '#24292E',\n\t\t900: '#161A1D',\n\t\t950: '#121417'\n\t},\n\t// frame: {\n\t// \t50: '#F9FAFB',\n\t// \t100: '#F3F4F6',\n\t// \t200: '#EDEFF2',\n\t// \t300: '#D8DDE3',\n\t// \t400: '#A9B2C1',\n\t// \t500: '#6E7D96',\n\t// \t600: '#536074',\n\t// \t700: '#404A59',\n\t// \t800: '#292F38',\n\t// \t900: '#15191E',\n\t// \t950: '#0F1115'\n\t// },\n\tprimary: {\n\t\t50: '#E3F0FC',\n\t\t100: '#CCE4FA',\n\t\t200: '#9DCBF6',\n\t\t300: '#6FB2F1',\n\t\t400: '#4099ED',\n\t\t500: '#1680E4',\n\t\t600: '#1166B6',\n\t\t700: '#0D4C87',\n\t\t800: '#09345D',\n\t\t900: '#051D33',\n\t\t950: '#03111E'\n\t},\n\tsecondary: {\n\t\t50: '#FFDAD4',\n\t\t100: '#FFCBC2',\n\t\t200: '#FFAD9E',\n\t\t300: '#FF8E7B',\n\t\t400: '#FF7057',\n\t\t500: '#F04E2D',\n\t\t600: '#D32F12',\n\t\t700: '#A5240D',\n\t\t800: '#7D1908',\n\t\t900: '#550E02',\n\t\t950: '#430E04'\n\t},\n\ttertiary: {\n\t\t50: '#F7F6F5',\n\t\t100: '#ECECE9',\n\t\t200: '#D8D6D0',\n\t\t300: '#C3C0B7',\n\t\t400: '#AEAA9E',\n\t\t500: '#999485',\n\t\t600: '#7D7868',\n\t\t700: '#5F5B4F',\n\t\t800: '#403D35',\n\t\t900: '#21201C',\n\t\t950: '#12110F'\n\t},\n\tdanger: {\n\t\t50: '#fff1f2',\n\t\t100: '#ffe4e6',\n\t\t200: '#fecdd3',\n\t\t300: '#fda4af',\n\t\t400: '#fb7185',\n\t\t500: '#f43f5e',\n\t\t600: '#e11d48',\n\t\t700: '#be123c',\n\t\t800: '#9f1239',\n\t\t900: '#881337',\n\t\t950: '#4c0519',\n\t},\n\twarning: {\n\t\t50: '#fffbeb',\n\t\t100: '#fef3c7',\n\t\t200: '#fde68a',\n\t\t300: '#fcd34d',\n\t\t400: '#fbbf24',\n\t\t500: '#f59e0b',\n\t\t600: '#d97706',\n\t\t700: '#b45309',\n\t\t800: '#92400e',\n\t\t900: '#78350f',\n\t\t950: '#451a03',\n\t},\n\tsuccess: {\n\t\t50: '#ecfdf5',\n\t\t100: '#d1fae5',\n\t\t200: '#a7f3d0',\n\t\t300: '#6ee7b7',\n\t\t400: '#34d399',\n\t\t500: '#10b981',\n\t\t600: '#059669',\n\t\t700: '#047857',\n\t\t800: '#065f46',\n\t\t900: '#064e3b',\n\t\t950: '#022c22',\n\t},\n\tinfo: {\n\t\t50: '#ecfeff',\n\t\t100: '#cffafe',\n\t\t200: '#a5f3fc',\n\t\t300: '#67e8f9',\n\t\t400: '#22d3ee',\n\t\t500: '#06b6d4',\n\t\t600: '#0891b2',\n\t\t700: '#0e7490',\n\t\t800: '#155e75',\n\t\t900: '#164e63',\n\t\t950: '#083344',\n\t}\n};\n\nconst defaultTheme = {\n\tname: 'default',\n\tvariables: {\n\t\t'--body-text-light': defaultColors.frame['700'],\n\t\t'--body-text-dark': defaultColors.frame['100'],\n\t\t'--body-bg-light': '#ffffff',\n\t\t'--body-bg-dark': defaultColors.frame['800'],\n\t},\n\tcolors: { ...defaultColors }\n};\n\nexport { defaultTailwindColors, defaultColors, defaultTheme };","import tinycolor, { ColorInput } from 'tinycolor2';\nimport plugin from 'tailwindcss/plugin';\nimport { defaultColors } from './defaults';\n\nexport type ThemeShade = 50 | 100 | 200 | 300 | 400 | 500 | 600 | 700 | 800 | 900 | 950\nexport type ThemeColorObject = Record<ThemeShade, string> & { DEFAULT?: string };\nexport type ThemeColors = Record<string, ThemeColorObject>;\n\nexport interface Theme {\n  name?: string;\n  preprocess?: 'colors' | 'variables' | 'both' | 'none';\n  colors: ThemeColors;\n  variables: Record<string, string>;\n}\n\nfunction isHexRgbHslColor(str: string) {\n  return ['#', 'rgb', 'rgba', 'hsl', 'hsla'].some(s => str.startsWith(s));\n}\n\nexport function getRgbChannels(color: ColorInput) {\n  const c = tinycolor(color).toRgb();\n  return `${c.r} ${c.g} ${c.b}`;\n}\n\nexport function ensureDefault(colors: Record<string, any>) {\n  for (const [, map] of Object.entries(colors)) {\n    if (typeof map !== 'object' || map === null || Array.isArray(map)) continue;\n    map['DEFAULT'] = map['DEFAULT'] || map['500'];\n  }\n  return colors;\n}\n\nexport function generateTailwindVars<T extends ThemeColors>(colors: T, parent = '') {\n  return Object.entries(ensureDefault(colors)).reduce((result, [key, value]) => {\n    const colorName =\n      parent === '' ? `${key}` : key === 'DEFAULT' ? `${parent}` : `${parent}-${key}`;\n    const formattedValue = `rgb(var(--color-${colorName})/<alpha-value>)`;\n    const currentResult =\n      (typeof value === 'string'\n        ? { [key]: formattedValue }\n        : { [key]: generateTailwindVars(value, key) }) as Record<string, unknown>\n    return { ...result, ...currentResult };\n  }, {}) as Record<keyof T, ThemeColorObject>;\n}\n\nexport function generateVariables(variables: Record<string, string>) {\n  return Object.entries(variables).reduce((result, [key, value]) => {\n    // converts hex, rgb, hsl to rgb for use with tailwind.\n    if (isHexRgbHslColor(value))\n      value = getRgbChannels(value);\n    result[key] = value;\n    return result;\n  }, {} as Record<string, string>);\n}\n\nexport function generateRootVars<T extends ThemeColors>(colors: T, name = '') {\n  return Object.keys(ensureDefault(colors)).reduce((result, shadeOrObj) => {\n    const value = colors[shadeOrObj as keyof typeof colors];\n    const key = shadeOrObj === 'DEFAULT' ? `--color-${name}` : `--color-${name}-${shadeOrObj}`;\n    const currentResult =\n      (typeof value === 'string'\n        ? { [key]: getRgbChannels(value) }\n        : generateRootVars(value as any, shadeOrObj)) as ThemeColors;\n    return { ...result, ...currentResult };\n  }, {}) as Record<keyof T, ThemeColorObject>;\n}\n\nexport function generateThemes(config: Record<string, Theme>) {\n  return Object.entries(config).reduce((result, [key, theme]) => {\n    theme = {\n      name: key,\n      preprocess: 'both',\n      ...theme\n    };\n    const variables = ['both', 'variables'].includes(theme.preprocess || '')\n      ? generateVariables(theme.variables)\n      : theme.variables;\n    const colors = ['both', 'colors'].includes(theme.preprocess || '')\n      ? generateRootVars(theme.colors)\n      : theme.colors;\n    result[`:root [data-theme='${theme.name}']`] = {\n      ...variables,\n      ...colors\n    }\n    return result;\n  }, {} as Record<string, Record<string, any>>);\n}\n\nexport const aft =\n  plugin.withOptions<Record<string, Theme>>((config) => {\n    return (opts) => {\n\n      const { addBase, addUtilities, matchUtilities, addComponents, theme } = opts;\n\n      addBase({\n\n        ...generateThemes(config),\n\n        html: {\n          height: '100%'\n        },\n\n        body: {\n          height: '100%',\n          'background-color': 'rgb(var(--body-bg-light))',\n          color: 'rgb(var(--body-text-light))'\n        },\n\n        '.dark body': {\n          'background-color': 'rgb(var(--body-bg-dark))',\n          color: 'rgb(var(--body-text-dark))'\n        },\n\n        '@keyframes fade-in-down': {\n          '0%': {\n            opacity: '0',\n            transform: 'translateY(-10px)'\n          },\n          '100%': {\n            opacity: '1',\n            transform: 'translateY(0)'\n          }\n        }\n\n      });\n\n      addUtilities({\n        '.text-md': {\n          fontSize: '1.0rem',\n          lineHeight: '1.5'\n        },\n        // color of text in darkmode.\n        'body-text-dark': {\n          color: `rgb(var(--body-text-dark))`\n        },\n        // color of text in lightmode\n        'body-text-light': {\n          color: `rgb(var(--body-text-light))`\n        },\n        // dark color text = body-text-light\n        '.text-dark': {\n          color: `rgb(var(--body-text-light))`\n        },\n        // light color text = body-text-dark\n        '.text-light': {\n          color: `rgb(var(--body-text-dark))`\n        },\n        '.body-dark': {\n          'background-color': `rgb(var(--body-bg-dark))`\n        },\n        '.body-light': {\n          'background-color': `rgb(var(--body-bg-light))`\n        },\n        '.small-caps': {\n          'font-variant': 'all-small-caps'\n        },\n        '.fade-in-down': 'fade-in-down 0.3s ease-out'\n      });\n\n      matchUtilities({\n        brightness: (value) => ({\n          filter: `brightness(${value})`\n        })\n      }, {\n        values: { ...theme('brightness'), 80: '.80', 85: '.85', 102: '1.02', 115: '1.15', 135: '1.35' }\n      });\n\n      matchUtilities({\n        animate: (value) => ({\n          animation: value\n        })\n      }, {\n        values: { ...theme('animation'), 'fade-in-down': 'fade-in-down 0.3s ease-out' } as any\n      });\n\n    };\n  },\n    () => {\n\n      return {\n        theme: {\n          extend: {\n            // Generate variables that Tailwind uses to consume Css variables.\n            // TODO: add ability for additional color names/keys.\n            // ex: {\n            //    primary: 'rgb(var(--color-${colorName})/<alpha-value>)',\n            //    secondary: 'rgb(var(--color-${colorName})/<alpha-value>)',\n            //    ....continue w/ each color\n            // }\n            colors: generateTailwindVars(defaultColors)\n          }\n        }\n      }\n    }\n  );\n\nexport default aft;\n"]}